def WaitingTime(processes, n, wt): 
    rt = [0] * n
    for i in range(n): 
        rt[i] = processes[i][1] 
    complete = 0
    t = 0
    infinity = 999999
    short = 0
    check = False
    while (complete != n): 
        for j in range(n): 
            if ((processes[j][2] <= t) and (rt[j] < infinity) and rt[j] > 0): 
                infinity = rt[j] 
                short = j 
                check = True
        if (check == False): 
            t += 1
            continue
        rt[short] -= 1
        infinity = rt[short]
        if (rt[short] == 0):
            infinity = 999999
            complete += 1
            check = False
            finish = t + 1
            wt[short] = (finish - proc[short][1] -proc[short][2]) 
            if (wt[short] < 0):
                wt[short] = 0
        t += 1
def TurnAroundTime(processes, n, wt, tat): 
    for i in range(n): 
        tat[i] = processes[i][1] + wt[i] 


def AverageTime(processes, n): 
    wt = [0] * n 
    tat = [0] * n 
    WaitingTime(processes, n, wt)  
    TurnAroundTime(processes, n, wt, tat)  
    total_wt = 0
    total_tat = 0
    for i in range(n): 
        total_wt = total_wt + wt[i] 
        total_tat = total_tat + tat[i] 
    return(total_wt /n)  
def Finish(processes, n,lo):
    wt = [0] * n
    WaitingTime(processes, n, wt)
    for i in range(n): 
        lo[i] =wt[i] +processes[i][2]
    lol = list(([1,2,3,4],lo))
    return lol
if __name__ =="__main__": 

    proc = [[1, 6, 1], [2, 8, 1], [3, 7, 2], [4, 3, 3]]
    n = 4
    lo= [0] * n  
    AverageTime(proc, n)
    Finish(proc, n,lo))
    
